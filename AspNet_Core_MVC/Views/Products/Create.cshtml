@model NorthwindSampleDb.Models.Products

@{
	ViewData["Title"] = "Create - Products";
	Layout="~/Pages/Shared/_Layout.cshtml";
}

<h1>Products - Create</h1>

@using (Html.BeginForm())
{
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="editor-label">
        @Html.LabelFor(model => model.ProductId)
    </div>
    <div class="editor-field">
		@Html.DisplayFor(model => model.ProductId)
        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ProductName)
    </div>
    <div class="editor-field">
		@Html.TextBoxFor(model => model.ProductName)
        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.SupplierID)
    </div>
    <div class="editor-field">
		@Html.DropDownListFor(model => model.SupplierID, (IEnumerable<SelectListItem>)ViewBag.SuppliersList)
        @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.CategoryID)
    </div>
    <div class="editor-field">
		@Html.DropDownListFor(model => model.CategoryID, (IEnumerable<SelectListItem>)ViewBag.CategoriesList)
        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.QuantityPerUnit)
    </div>
    <div class="editor-field">
		@Html.TextBoxFor(model => model.QuantityPerUnit)
        @Html.ValidationMessageFor(model => model.QuantityPerUnit, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.UnitPrice)
    </div>
    <div class="editor-field">
		@Html.TextBoxFor(model => model.UnitPrice)
        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.UnitsInStock)
    </div>
    <div class="editor-field">
		@Html.TextBoxFor(model => model.UnitsInStock)
        @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.UnitsOnOrder)
    </div>
    <div class="editor-field">
		@Html.TextBoxFor(model => model.UnitsOnOrder)
        @Html.ValidationMessageFor(model => model.UnitsOnOrder, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ReorderLevel)
    </div>
    <div class="editor-field">
		@Html.TextBoxFor(model => model.ReorderLevel)
        @Html.ValidationMessageFor(model => model.ReorderLevel, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Discontinued)
    </div>
    <div class="editor-field">
		@Html.CheckBoxFor(model => model.Discontinued, Model.Discontinued)
        @Html.ValidationMessageFor(model => model.Discontinued, "", new { @class = "text-danger" })
    </div>
    <p>
        <input type="submit" value="Create" />
    </p>
    <p>
        @Html.ActionLink("Back to List", "Index")
    </p>
}
