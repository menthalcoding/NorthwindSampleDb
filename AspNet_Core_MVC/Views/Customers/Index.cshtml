@model IEnumerable<NorthwindSampleDb.Models.Customers>

@{
	ViewData["Title"] = "Index - Customers";
	Layout="~/Pages/Shared/_Layout.cshtml";
}
    
<h1>Customers - Index</h1>

<p>
    Web Api Functions:
    <input id="btn_Get" type="button" value="Get" />
    <input id="btn_Post" type="button" value="Post" />
    <input id="btn_Put" type="button" value="Put" />
    <input id="btn_Delete" type="button" value="Delete" />
</p>
<p>
    <a href="/Customers/Create" asp-action="Create">Create New</a>
</p>
<table class="table table-striped" id="tbl_Customers">
    <thead>
        <tr class="tableCaption">
            <th>@Html.DisplayNameFor(model => model.CustomerID)</th>
            <th>@Html.DisplayNameFor(model => model.CompanyName)</th>
            <th>@Html.DisplayNameFor(model => model.ContactName)</th>
            <th>@Html.DisplayNameFor(model => model.ContactTitle)</th>
            <th>@Html.DisplayNameFor(model => model.Address)</th>
            <th>@Html.DisplayNameFor(model => model.City)</th>
            <th>@Html.DisplayNameFor(model => model.Region)</th>
            <th>@Html.DisplayNameFor(model => model.PostalCode)</th>
            <th>@Html.DisplayNameFor(model => model.Country)</th>
            <th>@Html.DisplayNameFor(model => model.Phone)</th>
            <th>@Html.DisplayNameFor(model => model.Fax)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
	@foreach (var item in Model) 
	{
        <tr>
            <td>@Html.DisplayFor(modelItem => item.CustomerID)</td>
            <td>@Html.DisplayFor(modelItem => item.CompanyName)</td>
            <td>@Html.DisplayFor(modelItem => item.ContactName)</td>
            <td>@Html.DisplayFor(modelItem => item.ContactTitle)</td>
            <td>@Html.DisplayFor(modelItem => item.Address)</td>
            <td>@Html.DisplayFor(modelItem => item.City)</td>
            <td>@Html.DisplayFor(modelItem => item.Region)</td>
            <td>@Html.DisplayFor(modelItem => item.PostalCode)</td>
            <td>@Html.DisplayFor(modelItem => item.Country)</td>
            <td>@Html.DisplayFor(modelItem => item.Phone)</td>
            <td>@Html.DisplayFor(modelItem => item.Fax)</td>
            <td>
				<a href="/Customers/Edit?CustomerID=@item.CustomerID">Edit</a>
				<a href="/Customers/Details?CustomerID=@item.CustomerID">Details</a>
                <a href="/Customers/Delete?CustomerID=@item.CustomerID">Delete</a>
            </td>
        </tr>
	}
</tbody>
</table>

<script>
    $(document).ready(function () {
        $('#tbl_Customers').DataTable();
    });
</script>
<script>
    $(document).ready(function () {

        /////////////////////////////
        // IMPORTANT
        // The following code samples are provided as an example.
        // Security problems may occur.
        /////////////////////////////

        async function getData(url = '', data = {}) {
            // Default options are marked with *
            let token = "Get your token here, Store it in local storage and read it from local storage is a better method"
            const response = await fetch(url, {
                method: 'GET',
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json',
                    "Authorization": JwtBearerKey //This field value appears. It causes serious security problems.
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                //body: JSON.stringify(data) // body data type must match "Content-Type" header
            });

            if (response.status != '200')
                alert(response.status + ' ' + response.statusText);

            return response.json(); // parses JSON response into native JavaScript objects
        }

        async function postData(url = '', data = {}) {
            // Default options are marked with *
            let token = "Get your token here, Store it in local storage and read it from local storage is a better method"
            const response = await fetch(url, {
                method: 'POST',
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json',
                    "Authorization": JwtBearerKey //This field value appears. It causes serious security problems.
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                body: JSON.stringify(data) // body data type must match "Content-Type" header
            });

            if (response.status != '200')
                alert(response.status + ' ' + response.statusText);

            return response.json(); // parses JSON response into native JavaScript objects
        }

        $('#btn_Get').click(function () {
            getData('api/Customers', {})
                .then(data => {
                    alert(JSON.stringify(data)); // JSON data parsed by `data.json()` call
                });
        });

        $('#btn_Post').click(function () {
            var data = {
				CustomerID: '',
				CompanyName: '',
				ContactName: '',
				ContactTitle: '',
				Address: '',
				City: '',
				Region: '',
				PostalCode: '',
				Country: '',
				Phone: '',
				Fax: '',
            };
            postData('api/Customers', data)
                .then(data => {
                    alert(JSON.stringify(data)); // JSON data parsed by `data.json()` call
                });
        });

        $('#btn_Put').click(function () {
            var ids = '1';
            var data = {
				CustomerID: '',
				CompanyName: '',
				ContactName: '',
				ContactTitle: '',
				Address: '',
				City: '',
				Region: '',
				PostalCode: '',
				Country: '',
				Phone: '',
				Fax: '',
            };
            postData('api/Customers/update/' + ids, data)
                .then(data => {
                    alert(JSON.stringify(data)); // JSON data parsed by `data.json()` call
                });
        });

        $('#btn_Delete').click(function () {
            var ids = '2';
            postData('api/Customers/delete/' + ids, null)
                .then(data => {
                    alert(JSON.stringify(data));
                });
        });
    });
</script>
